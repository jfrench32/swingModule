swing;//created a package with the name swing
 
import java.awt.BorderLayout;//import all the required packages
import java.awt.EventQueue;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
 
public class CheckBoxMenu extends JFrame {//create a class that should extend JFrame
 
    private JLabel statusbar;//statusbar is JLabel component
 
    public CheckBoxMenu() {//created constructors
 
        initUI();
    }
 
    private void initUI() {
 
        createMenuBar();
 
        statusbar = new JLabel("Ready");//statusbar created
        statusbar.setBorder(BorderFactory.createEtchedBorder());
        add(statusbar, BorderLayout.SOUTH);//direction of the status box created
 
        setTitle("JCheckBoxMenuItem");//created title
        setSize(360, 250);//created size
        setLocationRelativeTo(null);//to set the location of the window on the screen
        setDefaultCloseOperation(EXIT_ON_CLOSE);//to close the application
    }
 
    private void createMenuBar() {
 
        JMenuBar menubar = new JMenuBar();
        JMenu fileMenu = new JMenu("File");
        fileMenu.setMnemonic(KeyEvent.VK_F);
 
        JMenu viewMenu = new JMenu("View");
        viewMenu.setMnemonic(KeyEvent.VK_V);
 
        JCheckBoxMenuItem sbarMi = new JCheckBoxMenuItem("Show statubar");//JCheckBoxMenuItem creates the menu item list.
        sbarMi.setMnemonic(KeyEvent.VK_S);
        sbarMi.setDisplayedMnemonicIndex(5);//setDisplayedMnemonicIndex i.e to choose which one is going to be underlined
        sbarMi.setSelected(true);
 
        sbarMi.addItemListener(new ItemListener() {
 
            @Override
            public void itemStateChanged(ItemEvent e) {
                 
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    statusbar.setVisible(true);
                } else {
                    statusbar.setVisible(false);
                }
                 
            }
 
        });
 
        viewMenu.add(sbarMi);
 
        menubar.add(fileMenu);
        menubar.add(viewMenu);
 
        setJMenuBar(menubar);
    }
 
    public static void main(String[] args) {
 
        EventQueue.invokeLater(new Runnable() {
 
            @Override
            public void run() {
                CheckBoxMenu ex = new CheckBoxMenu();
                ex.setVisible(true);
            }
        });
    }
}
