package swing;
import java.awt.Container;//import all the required pacakges
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.Box;
import javax.swing.GroupLayout;
import static javax.swing.GroupLayout.Alignment.CENTER;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
 
 
class AboutDialog extends JDialog {//created a class i.e is AboutDialog (custom dialogue)that should extends the JDialog
 
    public AboutDialog(Frame parent) {
        super(parent);//used super keyword to get the parent properties
 
        initUI();//method
    }
 
    private void initUI() {
 
        ImageIcon icon = new ImageIcon("notes.png");//creating image
        JLabel label = new JLabel(icon);
 
        JLabel name = new JLabel("Notes, 1.23");
        name.setFont(new Font("Serif", Font.BOLD, 13));//setting font size
 
        JButton btn = new JButton("OK");//creating ok button
        btn.addActionListener(new ActionListener() {//ActionListener is a interface that needs to be implemented on created button.
 
            @Override
            public void actionPerformed(ActionEvent event) {
                dispose();
            }
        });
 
        createLayout(name, label, btn);
 
        setModalityType(ModalityType.APPLICATION_MODAL);// setModalityType() is used to set the quality of the model
 
        setTitle("About Notes");//created the title
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);//to close the window
        setLocationRelativeTo(getParent());//to keep the window in middle of the screen
    }
 
    private void createLayout(JComponent... arg) {
 
        Container pane = getContentPane();
        GroupLayout gl = new GroupLayout(pane);
        pane.setLayout(gl);
 
        gl.setAutoCreateContainerGaps(true);
        gl.setAutoCreateGaps(true);
 
        gl.setHorizontalGroup(gl.createParallelGroup(CENTER)
                .addComponent(arg[0])
                .addComponent(arg[1])
                .addComponent(arg[2])
                .addGap(200)
        );
 
        gl.setVerticalGroup(gl.createSequentialGroup()
                .addGap(30)
                .addComponent(arg[0])
                .addGap(20)
                .addComponent(arg[1])
                .addGap(20)
                .addComponent(arg[2])
                .addGap(30)
        );
 
        pack();
    }
}
 
public class CustomDialogue extends JFrame //CustomDialogue is extending the JFrame
    implements ActionListener {//implemented the ActionListener interface
 
    public CustomDialogue() {
 
        initUI();//method
    }
 
    private void initUI() {
 
        createMenuBar();//to create the menu
         
        setTitle("Simple Dialog");//set the title
        setSize(350, 250);//set the boundaries
        setLocationRelativeTo(null);//set the locaton of the window
        setDefaultCloseOperation(EXIT_ON_CLOSE);//window will be closed
    }
 
    private void createMenuBar() {
 
        JMenuBar menubar = new JMenuBar();
 
        JMenu fileMenu = new JMenu("File");//creating menu file
        fileMenu.setMnemonic(KeyEvent.VK_F);
 
        JMenu helpMenu = new JMenu("Help");//creating menu help
        helpMenu.setMnemonic(KeyEvent.VK_H);
 
        JMenuItem aboutMi = new JMenuItem("About");//creating menu about
        aboutMi.setMnemonic(KeyEvent.VK_A);
        helpMenu.add(aboutMi);//click on help i.e displays about 
         
        aboutMi.addActionListener(this);
 
        menubar.add(fileMenu);
        menubar.add(Box.createGlue());
        menubar.add(helpMenu);
        setJMenuBar(menubar);
    }
 
    @Override
    public void actionPerformed(ActionEvent e) {
         
        showAboutDialog();
    }
 
    private void showAboutDialog() {
 
        AboutDialog ad = new AboutDialog(this);
        ad.setVisible(true);
    }
 
    public static void main(String[] args) {
 
        EventQueue.invokeLater(new Runnable() {
 
            @Override
            public void run() {
                CustomDialogue sd = new CustomDialogue();
                sd.setVisible(true);
            }
        });
    }
}
