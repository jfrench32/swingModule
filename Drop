package swing;//Created a package with the name swing
 
import java.awt.Dimension;//import all the required packages
import java.awt.FlowLayout;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import javax.swing.DefaultListModel;
import javax.swing.DropMode;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.TransferHandler;
 
 
public class DropingList extends JFrame {//created a class with the name DropingList that should extend JFrame
 
    JTextField field;//created text field
    DefaultListModel model;//Default model will be created
 
    public DropingList() {
 
        setTitle("DropingList");//set the title as DropingList
 
        JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 15, 15));//creating a panel
 
        JScrollPane pane = new JScrollPane();
        pane.setPreferredSize(new Dimension(180, 150));//setting the size
 
        model = new DefaultListModel();
        JList list = new JList(model);
 
        list.setDropMode(DropMode.INSERT);
        list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        list.setTransferHandler(new ListHandler());
 
        field = new JTextField("");//to write new text
        field.setPreferredSize(new Dimension(150, 25));//creating sizes
        field.setDragEnabled(true);//to enable the dragging 
 
        panel.add(field);
        pane.getViewport().add(list); 
        panel.add(pane);
 
        add(panel);
 
        pack();
 
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//to close the window
        setLocationRelativeTo(null);//to set the window in center position of the screen
        setVisible(true);//to visible the window
    }
 
 
    private class ListHandler extends TransferHandler {//created a class ListHandler that should extend TransferHandler ,to transfer the data between the componnents
        public boolean canImport(TransferSupport support) {
             if (!support.isDrop()) {
                 return false;
             }
 
             return support.isDataFlavorSupported(DataFlavor.stringFlavor);
         }
 
         public boolean importData(TransferSupport support) {
             if (!canImport(support)) {
               return false;
             }
 
             Transferable transferable = support.getTransferable();
             String line;
             try {
               line = (String) transferable.getTransferData(DataFlavor.stringFlavor);
             } catch (Exception e) {
               return false;
             }
 
             JList.DropLocation dl = (JList.DropLocation) support.getDropLocation();
             int index = dl.getIndex();
 
             String[] data = line.split(",");
             for (String item: data) {
                 if (!item.isEmpty())
                    model.add(index++, item.trim());
             }
             return true;
         }
    }
 
    public static void main(String[] args) {//writing main method here
        new DropingList();
    }
}
